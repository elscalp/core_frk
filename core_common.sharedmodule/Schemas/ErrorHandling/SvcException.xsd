<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	 xmlns="http://www.tibco.com/ESB/framework/exception_handling/svc_exception_v1"
	 xmlns:cm_types="http://www.tibco.com/ESB/framework/messaging/common_types_v1"
	 targetNamespace="http://www.tibco.com/ESB/framework/exception_handling/svc_exception_v1"
	 elementFormDefault="qualified"
	 attributeFormDefault="unqualified">
	<xs:import namespace="http://www.tibco.com/ESB/framework/messaging/common_types_v1" schemaLocation="../Messaging/CommonTypes.xsd"/>

	<!--***************************************************************************-->
	<!-- Exception type                                                    -->
	<!--***************************************************************************-->
	<!---->
	<xs:element name="svcException" type="svc_exception_type"/>
	<xs:element name="base_exception" type="base_exception_type"/>

	<xs:element name="readProcessStackIn" type="read_process_stack_in_type"/>
	<xs:element name="readProcessStackOut" type="read_process_stack_out_type"/>


	<!---->
	<xs:complexType name="svc_exception_type">
		<xs:sequence>
			<xs:element name="timeStamp" type="xs:dateTime"/>
			<xs:element name="processPath" type="cm_types:process_path_type"/>
			<xs:element name="processStack" type="cm_types:process_stack_type"/>
			<xs:element name="code" type="exception_code_type"/>
			<xs:element name="desc" type="exception_desc_type"/>
			<xs:element name="nativecode" type="exception_code_type" minOccurs="0"/>
			<xs:element name="nativedesc" type="exception_desc_type" minOccurs="0"/>
			<xs:element name="type" type="exception_type_type"/>
			<xs:element name="severity" type="exception_severity_type"/>
			<xs:element name="inputData" type="exception_input_data_type" minOccurs="0"/>
			<xs:element name="stackTrace" type="exception_stack_trace_type" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<!---->
	<xs:complexType name="base_exception_type">
		<xs:sequence>
			<xs:element name="code" type="exception_code_type"/>
			<xs:element name="desc" type="exception_desc_type"/>
			<xs:element name="nativecode" type="exception_code_type" minOccurs="0"/>
			<xs:element name="nativedesc" type="exception_desc_type" minOccurs="0"/>
			<xs:element name="type" type="exception_type_type"/>
			<xs:element name="severity" type="exception_severity_type"/>
			<xs:element name="inputData" type="exception_input_data_type" minOccurs="0"/>
			<xs:element name="stackTrace" type="exception_stack_trace_type" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<!---->
	<xs:simpleType name="exception_code_type">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="32"/>
		</xs:restriction>
	</xs:simpleType>

	<!--Exception description - no hard size limit in XSD to ensure backward compatibility 
	and flexibility - BUT will be truncated to 2048 bytes in audit DB -->
	<xs:simpleType name="exception_desc_type">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<!---->
	<xs:simpleType name="exception_type_type">
		<xs:restriction base="xs:string">
			<xs:enumeration value="B"/>
			<xs:enumeration value="T"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- Severity ; 1 is highest severity -->
	<xs:simpleType name="exception_severity_type">
		<xs:restriction base="xs:int">
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
		</xs:restriction>
	</xs:simpleType>

	<!---->
	<xs:simpleType name="exception_stack_trace_type">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<!---->
	<xs:simpleType name="exception_input_data_type">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<!---->
	<xs:simpleType name="exception_debug_data_type">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="read_process_stack_in_type">
		<xs:sequence>
			<xs:element name="positionFrom" type="xs:string"/>
			<xs:element name="stackMemberPosition" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="read_process_stack_out_type">
		<xs:sequence>
			<xs:element name="processPath" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>